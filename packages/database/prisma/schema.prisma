datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  // directUrl = env("DIRECT_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  address String @id
  name    String
  surname String
}

model Course {
  id                           Int                 @id @default(autoincrement())
  address                      String
  name                         String              @default("")
  description                  String              @default("")
  symbol                       String              @default("")
  image_url                    String              @default("")
  website_url                  String              @default("")
  media_channel                String              @default("")
  ipfs_metadata                String              @default("")
  timestamp                    Int
  chainId                      Int
  karma_access_control_address String
  snapshot_space_ens           String              @default("red-panda.eth")
  credentials                  Credential[]
  credentialsAssignment        CourseCredentials[]

  @@unique([address, chainId])
}

enum CredentialType {
  MAGISTER
  DISCIPULUS
  OTHER
}

model Credential {
  id                  Int               @id @default(autoincrement())
  name                String
  description         String
  image_url           String
  ipfs_url            String
  chainId             Int
  type                CredentialType
  courseCredentials   CourseCredentials @relation(fields: [courseCredentialsId], references: [id])
  courseCredentialsId Int
  Course              Course            @relation(fields: [courseId], references: [id])
  courseId            Int

  @@unique([chainId, ipfs_url])
}

model CourseCredentials {
  id            Int          @id @default(autoincrement())
  course        Course       @relation(fields: [courseAddress, chainId], references: [address, chainId])
  courseAddress String
  userAddress   String
  credentials   Credential[]
  chainId       Int

  @@unique([courseAddress, userAddress])
}
